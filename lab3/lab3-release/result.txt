working dir: /u/course/ece244i/public//3

#############################################################
#############################################################
Running Testcase 1
#############################################################
#############################################################

Running the following input on your program:
=============================================================
maxShapes 20
create circle1 ellipse 50 80 2 2
move circle1 100 160
draw circle1
draw all
delete circle1
delete all
/tmp/BgD0MqEHc4/parser.dometita < ./1 > /tmp/BgD0MqEHc4/dometita.out1 2> /tmp/BgD0MqEHc4/dometita.err1
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> New database: max shapes is 20
> Created circle1: ellipse 50 80 2 2
> Moved circle1 to 100 160
> Drewcircle1: ellipse 100 160 2 2 
> Drew all shapes
circle1: ellipse 100 160 2 2 
> Deleted shape circle1
> Deleted: all shapes
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>

Running valgrind to check for memory leaks

############### Testcase 1 Results ##########################
Functionality: PASS - Output matches solution
Valgrind:      PASS - No memory leaks detected

#############################################################
#############################################################
Running Testcase 2
#############################################################
#############################################################

Running the following input on your program:
=============================================================
maxShapes 100
NotACommand
create triangle1 triangle 4 five 2 2
create triangle1 triangle 4 5 2 2
create c1 circle 1 1 30 30
move triangle1 -100 100
create move ellipse 100 100 20 10
create Ellipse ellipse 100 100 20 10
draw triangle1 circle1
draw
/tmp/BgD0MqEHc4/parser.dometita < ./2 > /tmp/BgD0MqEHc4/dometita.out2 2> /tmp/BgD0MqEHc4/dometita.err2
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> New database: max shapes is 100
> Error: invalid command
> Error: invalid argument
> Created triangle1: triangle 4 5 2 2
> Created c1: circle 1 1 30 30
> Error: invalid value
> Error: invalid shape name
> Created Ellipse: ellipse 100 100 20 10
> Error: too many arguments
> Error: too few arguments
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>

Running valgrind to check for memory leaks

############### Testcase 2 Results ##########################
Functionality: PASS - Output matches solution
Valgrind:      PASS - No memory leaks detected

#############################################################
#############################################################
Running Testcase 3
#############################################################
#############################################################

Running the following input on your program:
=============================================================
maxShapes 10
create s1 ellipse onehundred 1 2
create s1 triangle -100 1 2 4
create s1 rectangle one two five eight
create s1 hexagon 100 1200 5 8
create s1 ellipse 100 200 1 2 6
create s1 ellipse 100 200
create s1 rectangle 100 200 10 20
rotate s1 -100
rotate s1 362
draw everything
/tmp/BgD0MqEHc4/parser.dometita < ./3 > /tmp/BgD0MqEHc4/dometita.out3 2> /tmp/BgD0MqEHc4/dometita.err3
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> New database: max shapes is 10
> Error: invalid argument
> Error: invalid value
> Error: invalid argument
> Error: invalid shape type
> Error: too many arguments
> Error: too few arguments
> Created s1: rectangle 100 200 10 20
> Error: invalid value
> Error: invalid value
> Error: shape everything not found
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>

Running valgrind to check for memory leaks

############### Testcase 3 Results ##########################
Functionality: PASS - Output matches solution
Valgrind:      PASS - No memory leaks detected

#############################################################
#############################################################
Running Testcase 4
#############################################################
#############################################################

Running the following input on your program:
=============================================================
maxShapes 10
create s1 triangle 100 1 2 2 done
create s1 triangle 100 1
create s1 triangle 100
create s1
create
move s1 100 200 300
move s1
move
draw s1 done
draw
delete s1 done
delete all done
delete
/tmp/BgD0MqEHc4/parser.dometita < ./4 > /tmp/BgD0MqEHc4/dometita.out4 2> /tmp/BgD0MqEHc4/dometita.err4
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> New database: max shapes is 10
> Error: too many arguments
> Error: too few arguments
> Error: too few arguments
> Error: too few arguments
> Error: too few arguments
> Error: shape s1 not found
> Error: shape s1 not found
> Error: too few arguments
> Error: shape s1 not found
> Error: too few arguments
> Error: shape s1 not found
> Error: too many arguments
> Error: too few arguments
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>

Running valgrind to check for memory leaks

############### Testcase 4 Results ##########################
Functionality: PASS - Output matches solution
Valgrind:      PASS - No memory leaks detected

#############################################################
#############################################################
Running Testcase 5
#############################################################
#############################################################

Running the following input on your program:
=============================================================
maxShapes 1
create s1 ellipse 1 1 3 3
move s1 30 30
maxShapes 10
draw all
delete s1
create s3 ellipse 10 10 10 10
create s1 circle 1 1 90 90
draw s1
delete s3
delete s1
draw all
/tmp/BgD0MqEHc4/parser.dometita < ./5 > /tmp/BgD0MqEHc4/dometita.out5 2> /tmp/BgD0MqEHc4/dometita.err5
-------------------------------------------------------------

35584
ERROR: your program exited with a non-zero exit code.
This means that the program crashed due to a run-time
error or that your main function returned a value other
than zero.  Make sure to fix this error before submitting,
because it may result in a loss of marks!


#############################################################
#############################################################
Running Testcase 6
#############################################################
#############################################################

Running the following input on your program:
=============================================================
maxShapes 10
create s1 rectangle 30 40 -50 10
create s4 rectangle 30 40
create s3 circle 1 30 4 1
move s1 to the right
draw one
/tmp/BgD0MqEHc4/parser.dometita < ./6 > /tmp/BgD0MqEHc4/dometita.out6 2> /tmp/BgD0MqEHc4/dometita.err6
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> New database: max shapes is 10
> Error: invalid value
> Error: too few arguments
> > Error: shape s1 not found
> Error: shape one not found
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>


Output did not match the solution
The following output would have been accepted:


Solution output:
=============================================================
> New database: max shapes is 10
> Error: invalid value
> Error: too few arguments
> Error: invalid value
> Error: shape s1 not found
> Error: shape one not found
> 
-------------------------------------------------------------
Running diff on program output and solution output
( < actual output vs > expected output )
=============================================================
4c4,5
< > > Error: shape s1 not found
---
> > Error: invalid value
> > Error: shape s1 not found
-------------------------------------------------------------

Running valgrind to check for memory leaks

############### Testcase 6 Results ##########################
Functionality: FAIL - Output did not match solution
Valgrind:      PASS - No memory leaks detected

#############################################################
#############################################################
Running Testcase 7
#############################################################
#############################################################

Running the following input on your program:
=============================================================
maxShapes 2
create s1 ellipse 100 100 1 2
create s2 ellipse 100 100 1 2
create s3 ellipse 100 100 1 2
delete s2
create s4 ellipse 100 100 1 2
move s1 200 100
rotate         100
create s1           100 1
create s1      100
create s1
draw all
create s5 triangle 100 1 2 0 0
rotate s5 -200
draw 1st_node
draw 1.5
/tmp/BgD0MqEHc4/parser.dometita < ./7 > /tmp/BgD0MqEHc4/dometita.out7 2> /tmp/BgD0MqEHc4/dometita.err7
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> New database: max shapes is 2
> Created s1: ellipse 100 100 1 2
> Created s2: ellipse 100 100 1 2
> Error: shape array is full
> Deleted shape s2
> Error: shape array is full
> Moved s1 to 200 100
> Error: shape 100 not found
> Error: shape s1 exists
> Error: shape s1 exists
> Error: shape s1 exists
> Drew all shapes
s1: ellipse 200 100 1 2 
> Error: too many arguments
> Error: shape s5 not found
> Error: shape 1st_node not found
> Error: shape 1.5 not found
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>

Running valgrind to check for memory leaks

############### Testcase 7 Results ##########################
Functionality: PASS - Output matches solution
Valgrind:      PASS - No memory leaks detected

#############################################################
#############################################################
Running Testcase 8
#############################################################
#############################################################

Running the following input on your program:
=============================================================
maxShapes 20
create circle1 ellipse 50t 80 2 2
delete circle1
delete all
/tmp/BgD0MqEHc4/parser.dometita < ./8 > /tmp/BgD0MqEHc4/dometita.out8 2> /tmp/BgD0MqEHc4/dometita.err8
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> New database: max shapes is 20
> Error: invalid argument
> Error: shape circle1 not found
> Deleted: all shapes
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>

Running valgrind to check for memory leaks

############### Testcase 8 Results ##########################
Functionality: PASS - Output matches solution
Valgrind:      PASS - No memory leaks detected

#############################################################
#############################################################
Running Testcase 9
#############################################################
#############################################################

Running the following input on your program:
=============================================================
maxShapes 100
create s1 ellipse 100 100 15 15
delete s1
delete s1
delete all
/tmp/BgD0MqEHc4/parser.dometita < ./9 > /tmp/BgD0MqEHc4/dometita.out9 2> /tmp/BgD0MqEHc4/dometita.err9
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> New database: max shapes is 100
> Created s1: ellipse 100 100 15 15
> Deleted shape s1
> Error: shape s1 not found
> Deleted: all shapes
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>

Running valgrind to check for memory leaks

############### Testcase 9 Results ##########################
Functionality: PASS - Output matches solution
Valgrind:      PASS - No memory leaks detected

#############################################################
#############################################################
Running Testcase 10
#############################################################
#############################################################

Running the following input on your program:
=============================================================
maxShapes 10
create s1 triangle 1 3 40 10
draw all
maxShapes 3
create s1 rectangle 90 90 3 4
create s2 triangle 1 1 1 1
create s3 ellipse 30 30 30 30
create s4 circle 9 9 20 20
draw all
/tmp/BgD0MqEHc4/parser.dometita < ./10 > /tmp/BgD0MqEHc4/dometita.out10 2> /tmp/BgD0MqEHc4/dometita.err10
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> New database: max shapes is 10
> Created s1: triangle 1 3 40 10
> Drew all shapes
s1: triangle 1 3 40 10 
> New database: max shapes is 3
> Created s1: rectangle 90 90 3 4
> Created s2: triangle 1 1 1 1
> Error: shape array is full
> Error: shape array is full
> Drew all shapes
s1: rectangle 90 90 3 4 s2: triangle 1 1 1 1 
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>


Output did not match the solution
The following output would have been accepted:


Solution output:
=============================================================
> New database: max shapes is 10
> Created s1: triangle 1 3 40 10
> Drew all shapes
s1: triangle 1 3 40 10
> New database: max shapes is 3
> Created s1: rectangle 90 90 3 4
> Created s2: triangle 1 1 1 1
> Created s3: ellipse 30 30 30 30
> Error: shape array is full
> Drew all shapes
s1: rectangle 90 90 3 4
s2: triangle 1 1 1 1
s3: ellipse 30 30 30 30
> 
-------------------------------------------------------------
Running diff on program output and solution output
( < actual output vs > expected output )
=============================================================
8c8
< > Error: shape array is full
---
> > Created s3: ellipse 30 30 30 30
11c11,13
< s1: rectangle 90 90 3 4 s2: triangle 1 1 1 1 
---
> s1: rectangle 90 90 3 4
> s2: triangle 1 1 1 1
> s3: ellipse 30 30 30 30
-------------------------------------------------------------

Running valgrind to check for memory leaks

############### Testcase 10 Results ##########################
Functionality: FAIL - Output did not match solution
Valgrind:      PASS - No memory leaks detected

#############################################################
#############################################################
Running Testcase 11
#############################################################
#############################################################

Running the following input on your program:
=============================================================
maxShapes 10
Create s1 rectangle 30 40 1 1
create t1 triangle 4 10 4 1 50
create c1 circle 1 1 3 3
create t2 triangle 1 1 70 70
draw all
/tmp/BgD0MqEHc4/parser.dometita < ./11 > /tmp/BgD0MqEHc4/dometita.out11 2> /tmp/BgD0MqEHc4/dometita.err11
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> New database: max shapes is 10
> Error: invalid command
> Error: too many arguments
> Created c1: circle 1 1 3 3
> Created t2: triangle 1 1 70 70
> Drew all shapes
c1: circle 1 1 3 3 t2: triangle 1 1 70 70 
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>

Running valgrind to check for memory leaks

############### Testcase 11 Results ##########################
Functionality: PASS - Output matches solution
Valgrind:      PASS - No memory leaks detected

#############################################################
#############################################################
Running Testcase 12
#############################################################
#############################################################

Running the following input on your program:
=============================================================
maxShapes 40
create Rectangle3 rectangle 3 4 7 7.1
draw all
/tmp/BgD0MqEHc4/parser.dometita < ./12 > /tmp/BgD0MqEHc4/dometita.out12 2> /tmp/BgD0MqEHc4/dometita.err12
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> New database: max shapes is 40
> Error: too many arguments
> Drew all shapes

> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>


Output did not match the solution
The following output would have been accepted:


Solution output:
=============================================================
> New database: max shapes is 40
> Error: invalid argument
> Drew all shapes
> 
-------------------------------------------------------------
Running diff on program output and solution output
( < actual output vs > expected output )
=============================================================
2c2
< > Error: too many arguments
---
> > Error: invalid argument
4d3
< 
-------------------------------------------------------------

Running valgrind to check for memory leaks

############### Testcase 12 Results ##########################
Functionality: FAIL - Output did not match solution
Valgrind:      PASS - No memory leaks detected


#############################################################
################# Summary for 12 test(s) #####################
#############################################################

Functionality: FAIL: 4 test(s) failed!
Valgrind:      FAIL: Could not run due to run time errors in 1 tests

#############################################################
#############################################################
#############################################################

